"""Adding creation and update column (creator and date) into medialabel model

Revision ID: 143ea375d5af
Revises: f96766b34008
Create Date: 2021-02-26 21:22:07.281564

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '143ea375d5af'
down_revision = 'f96766b34008'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medialabel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('begin_time', sa.Float(), nullable=True),
    sa.Column('end_time', sa.Float(), nullable=True),
    sa.Column('low_freq', sa.Float(), nullable=True),
    sa.Column('high_freq', sa.Float(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('label_type', sa.String(), nullable=True),
    sa.Column('label_confidence', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medialabel_begin_time'), 'medialabel', ['begin_time'], unique=False)
    op.create_index(op.f('ix_medialabel_created_by'), 'medialabel', ['created_by'], unique=False)
    op.create_index(op.f('ix_medialabel_end_time'), 'medialabel', ['end_time'], unique=False)
    op.create_index(op.f('ix_medialabel_high_freq'), 'medialabel', ['high_freq'], unique=False)
    op.create_index(op.f('ix_medialabel_id'), 'medialabel', ['id'], unique=False)
    op.create_index(op.f('ix_medialabel_label'), 'medialabel', ['label'], unique=False)
    op.create_index(op.f('ix_medialabel_label_confidence'), 'medialabel', ['label_confidence'], unique=False)
    op.create_index(op.f('ix_medialabel_label_type'), 'medialabel', ['label_type'], unique=False)
    op.create_index(op.f('ix_medialabel_low_freq'), 'medialabel', ['low_freq'], unique=False)
    op.create_index(op.f('ix_medialabel_media_id'), 'medialabel', ['media_id'], unique=False)
    op.create_index(op.f('ix_medialabel_updated_by'), 'medialabel', ['updated_by'], unique=False)
    op.drop_index('ix_media_label_begin_time', table_name='media_label')
    op.drop_index('ix_media_label_end_time', table_name='media_label')
    op.drop_index('ix_media_label_high_freq', table_name='media_label')
    op.drop_index('ix_media_label_id', table_name='media_label')
    op.drop_index('ix_media_label_label', table_name='media_label')
    op.drop_index('ix_media_label_label_confidence', table_name='media_label')
    op.drop_index('ix_media_label_label_type', table_name='media_label')
    op.drop_index('ix_media_label_low_freq', table_name='media_label')
    op.drop_index('ix_media_label_media_id', table_name='media_label')
    op.drop_table('media_label')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('media_label',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('media_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('begin_time', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('low_freq', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('high_freq', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('label', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('label_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('label_confidence', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], name='media_label_media_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='media_label_pkey')
    )
    op.create_index('ix_media_label_media_id', 'media_label', ['media_id'], unique=False)
    op.create_index('ix_media_label_low_freq', 'media_label', ['low_freq'], unique=False)
    op.create_index('ix_media_label_label_type', 'media_label', ['label_type'], unique=False)
    op.create_index('ix_media_label_label_confidence', 'media_label', ['label_confidence'], unique=False)
    op.create_index('ix_media_label_label', 'media_label', ['label'], unique=False)
    op.create_index('ix_media_label_id', 'media_label', ['id'], unique=False)
    op.create_index('ix_media_label_high_freq', 'media_label', ['high_freq'], unique=False)
    op.create_index('ix_media_label_end_time', 'media_label', ['end_time'], unique=False)
    op.create_index('ix_media_label_begin_time', 'media_label', ['begin_time'], unique=False)
    op.drop_index(op.f('ix_medialabel_updated_by'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_media_id'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_low_freq'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_label_type'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_label_confidence'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_label'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_id'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_high_freq'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_end_time'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_created_by'), table_name='medialabel')
    op.drop_index(op.f('ix_medialabel_begin_time'), table_name='medialabel')
    op.drop_table('medialabel')
    # ### end Alembic commands ###
